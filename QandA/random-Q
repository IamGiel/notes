Google Searches:

1. Why angular components, doesnt load all css, from clicking the back button?
    Do not use the back button code or onclick="window.history.go(-1);
    instead use navigateByUrl or navigate.

    Import {Router} from "@angular/router";

    // inject it in the onstructor
    constructor(private router: Router) {}


    // then use it
    welcomeSup() {
        this.router.navigateByUrl('/procurement/intro').then(
            nav => {
                console.log('navigated success ', nav); // true if navigation is successful
            },
            err => {
                console.log('errored from home page ', err); // when there's an error
            }
        );
    }


2. angular css styles lost after back button:


3. ERROR:

“The template specified for component SidebarComponent is not a string” 
- Make sure that templateUrl: './something.component.html' is  in ".html"



4. ng2-file-uploader for Angular 6.^ https://www.youtube.com/watch?v=NsHgvKeAEDI

5. How to test if im hitting the API after a file upload.  Backend engineers provided the API URL.

6. How to modify and angular bootstrap (ng-bootstrap) css? 

https://stackoverflow.com/questions/43610229/how-modify-css-of-ng-bootstrap-carousel-using-angular-2

7. What does 'void' in typescript mean? 

This is just a type, as documented here:

Void
Perhaps the opposite in some ways to 'any' is 'void', the absence of having any type at all. You may commonly see this as the return type of functions that do not return a value:

function warnUser(): void {
    alert("This is my warning message");
}


8. So it implies that function, is of a type 'void'? Or it returns void?

The standard typescript way how to declare type is to use colon : - this notation: name:string or func:Function... so if we want to explicitly declare returned type of a function we use the same notation. So the answer: it is the retunred value type 


9.  How to use service in Angular?

- create a model (gelsModel.ts)
- create a service (ng g s gelService)
- import model in service
- create a getFunction in service (get data) eg: getLists()
- add to component:
- import service in component, import model as well
- initiate a variable set it to type model eg: somevariable:gelsModel
- inject the service
- create function in component that calls the service eg:
`function getData(): void {
  this.somevariable = this.injectedservice.getLists();
}`